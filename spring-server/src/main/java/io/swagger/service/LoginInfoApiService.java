package io.swagger.service;import io.swagger.exception.ResourceAlreadyExistsException;import io.swagger.exception.ResourceDoesNotExistsException;import io.swagger.interfaces.LoginApi;import io.swagger.interfaces.LoginInfoApi;import io.swagger.model.LoginInfo;import io.swagger.repository.LoginInfoRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;@Servicepublic class LoginInfoApiService {    @Autowired    private LoginInfoRepository loginInfoRepository;    public LoginInfo addLogin(LoginInfo body) throws ResourceAlreadyExistsException {        if(!loginInfoRepository.exists(body.getUsername())){            return loginInfoRepository.save(body);        }else{            throw new ResourceAlreadyExistsException(body.getUsername());        }    }    public void updateLogin(LoginInfo body) throws ResourceDoesNotExistsException {        if(loginInfoRepository.exists(body.getUsername())){            loginInfoRepository.delete(body.getUsername());            loginInfoRepository.save(body);        }else{            throw new ResourceDoesNotExistsException(body.getUsername());        }    }    public void delete(String username) throws ResourceDoesNotExistsException {        if(loginInfoRepository.exists(username)){            loginInfoRepository.delete(username);        }else{            throw new ResourceDoesNotExistsException(username);        }    }    public LoginInfo getLoginByUserName(String username) throws ResourceDoesNotExistsException {        if(loginInfoRepository.exists(username)){            return loginInfoRepository.findOne(username);        }else{            throw new ResourceDoesNotExistsException(username);        }    }}